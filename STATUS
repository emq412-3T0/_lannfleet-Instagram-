      * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      *                                                     *
      *  THIS RELEASE STREAM IS OPEN FOR STABILIZATION.     *
      *                                                     *
      * * * * * * * * * * * * * * * * * * * * * * * * * * * *

This file tracks the status of releases in the 1.12.x line.

See http://subversion.apache.org/docs/community-guide/releasing.html#release-stabilization
for details on how release lines and voting work, what kinds of bugs can
delay a release, etc.

Status of 1.12.1:

Candidate changes:
==================

 * r1855419
   Fix conflict resolver bug where local and incoming edits got swapped.
   Justification:
     Bug breaks text conflict resolution.
     User complained: https://svn.haxx.se/dev/archive-2019-03/0012.shtml
   Votes:
     +1: stsp
     +0: rhuijben

 * r1856397
   Allow generating Visual Studio 2019 projects
   Justification:
     Makes it easier to build Subversion on Windows. Simple local fix.
   Votes:
     +1: rhuijben

 * r1857367
    Fix memory lifetime problem in a libsvn_wc error code path.
    Justification:
      Edge-case crash. Subversion should not crash.
    Votes:
      +1: stsp, rhuijben

 * r1860175,r1860186,r1860187,r1860188
   Fix building Subversion with Visual Studio 2005 and 2008.
   Justification:
     A change in 1.12 accidentally introduced a macro escaping issue
     which broke compilation with these older versions of VC++.
   Notes:
     Should have been a simple patch. But lack of this version on my
     development machine made things harder.
     (I don't see a problem with dropping VS200 2008 support with
      a future Subversion version, but then we should provide better
      documentation on that change.)
   Votes:
     +1: rhuijben

 * r1859732, r1859734
   io: Implement the functions that check for node existence using the native
   Win32 APIs on Windows.
   Justification:
     - This allows us to remove the hack from r1833621 and properly handle
       reparse points on Windows irrespectively of the used APR version.
     - This improves the I/O performance by using only a single call to
       GetFileAttributes(), which is much faster than the generic stat
       implementations from APR 1.6.x and 1.7.x (the latter should be
       even more slower).
   Votes:
     +1: kotkov, rhuijben

Veto-blocked changes:
=====================


Approved changes:
=================
